{
  "name": "minecraft-protocol",
  "version": "0.14.1-GH",
  "description": "Parse and serialize minecraft packets, plus authentication and encryption.",
  "main": "index.js",
  "repository": {
    "type": "git",
    "url": "git://github.com/andrewrk/node-minecraft-protocol.git"
  },
  "scripts": {
    "prepublish": "gulp",
    "test": "mocha --reporter spec"
  },
  "keywords": [
    "minecraft",
    "protocol",
    "parse",
    "serialize",
    "packet",
    "authentication",
    "encrypton",
    "bot"
  ],
  "author": {
    "name": "Andrew Kelley"
  },
  "license": "BSD",
  "engines": {
    "node": ">=0.8.16"
  },
  "browser": "browser.js",
  "devDependencies": {
    "gulp": "^3.8.11",
    "gulp-plumber": "^1.0.1",
    "gulp-babel": "^5.1.0",
    "gulp-sourcemaps": "^1.3.0",
    "mkdirp": "~0.3.4",
    "mocha": "~1.8.2",
    "rimraf": "~2.1.1",
    "batch": "~0.3.1",
    "jsonschema": "~1.0.1",
    "zfill": "0.0.1"
  },
  "dependencies": {
    "babel-runtime": "^5.4.4",
    "buffer-equal": "0.0.0",
    "node-uuid": "~1.4.1",
    "prismarine-nbt": "0.0.1",
    "readable-stream": "^1.1.0",
    "superagent": "~0.10.0",
    "ursa-purejs": "0.0.3",
    "ursa": "~0.8.0"
  },
  "optionalDependencies": {
    "ursa": "~0.8.0"
  },
  "readme": "# minecraft protocol\n[![NPM version](https://badge.fury.io/js/minecraft-protocol.svg)](http://badge.fury.io/js/minecraft-protocol) [![Build Status](https://circleci.com/gh/PrismarineJS/node-minecraft-protocol.svg?style=shield)](https://circleci.com/gh/PrismarineJS/node-minecraft-protocol) [![Join the chat at https://gitter.im/PrismarineJS/node-minecraft-protocol](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/PrismarineJS/node-minecraft-protocol?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\n\n\nParse and serialize minecraft packets, plus authentication and encryption.\n\n## Features\n\n * Supports Minecraft version 1.8.1\n * Parses all packets and emits events with packet fields as JavaScript\n   objects.\n * Send a packet by supplying fields as a JavaScript object.\n * Client\n   - Authenticating and logging in\n   - Encryption\n   - Compression\n   - Both online and offline mode\n   - Respond to keep-alive packets.\n   - Ping a server for status\n * Server\n   - Online/Offline mode\n   - Encryption\n   - Compression\n   - Handshake\n   - Keep-alive checking\n   - Ping status\n * Robust test coverage. See Test Coverage section below.\n * Optimized for rapidly staying up to date with Minecraft protocol updates.\n\n## Projects Using node-minecraft-protocol\n\n * [mineflayer](https://github.com/andrewrk/mineflayer/) - create minecraft\n   bots with a stable, high level API.\n * [mcserve](https://github.com/andrewrk/mcserve) - runs and monitors your\n   minecraft server, provides real-time web interface, allow your users to\n   create bots.\n\n## Usage\n\n### Echo client example\n\n```js\nvar mc = require('minecraft-protocol');\nvar client = mc.createClient({\n  host: \"localhost\",   // optional\n  port: 25565,         // optional\n  username: \"email@example.com\",\n  password: \"12345678\",\n});\nclient.on('chat', function(packet) {\n  // Listen for chat messages and echo them back.\n  var jsonMsg = JSON.parse(packet.message);\n  if (jsonMsg.translate == 'chat.type.announcement' || jsonMsg.translate == 'chat.type.text') {\n    var username = jsonMsg.using[0];\n    var msg = jsonMsg.using[1];\n    if (username === client.username) return;\n    client.write(0x03, {\n      message: msg\n    });\n  }\n});\n```\n\nIf the server is in offline mode, you may leave out the `password` option.\n\n### Hello World server example\n\n```js\nvar mc = require('minecraft-protocol');\nvar server = mc.createServer({\n  'online-mode': true,   // optional\n  encryption: true,      // optional\n  host: '0.0.0.0',       // optional\n  port: 25565,           // optional\n});\nserver.on('login', function(client) {\n  client.write('login', {\n    entityId: client.id,\n    levelType: 'default',\n    gameMode: 0,\n    dimension: 0,\n    difficulty: 2,\n    maxPlayers: server.maxPlayers\n  });\n  client.write('position', {\n    x: 0,\n    y: 1.62,\n    z: 0,\n    yaw: 0,\n    pitch: 0,\n    onGround: true\n  });\n  var msg = { translate: 'chat.type.announcement', using: [\n    'Server',\n    'Hello, ' + client.username\n  ]};\n  client.write(0x03, { message: JSON.stringify(msg) });\n});\n```\n\n## Installation\n\n`npm install minecraft-protocol`\n\nURSA, an optional dependency, should improve login times\nfor servers. However, it can be somewhat complicated to install.\n\nFollow the instructions from\n[Obvious/ursa](https://github.com/Obvious/ursa)\n\n## Documentation\n\nSee [doc](doc/README.md)\n\n\n## Testing\n\n* Ensure your system has the `java` executable in `PATH`.\n* Download the appropriate version of `minecraft_server.jar`.\n* `MC_SERVER_JAR=path/to/minecraft_server.jar MC_USERNAME=email@example.com MC_PASSWORD=password npm test`\n\n### Test Coverage\n\n```\n\n  packets\n    ✓ handshaking,ServerBound,0x00\n    ✓ status,ServerBound,0x00\n    ✓ status,ServerBound,0x01\n    ✓ status,ClientBound,0x00\n    ✓ status,ClientBound,0x01\n    ✓ login,ServerBound,0x00\n    ✓ login,ServerBound,0x01\n    ✓ login,ClientBound,0x00\n    ✓ login,ClientBound,0x01\n    ✓ login,ClientBound,0x02\n    ✓ login,ClientBound,0x03\n    ✓ play,ServerBound,0x00\n    ✓ play,ServerBound,0x01\n    ✓ play,ServerBound,0x02\n    ✓ play,ServerBound,0x03\n    ✓ play,ServerBound,0x04\n    ✓ play,ServerBound,0x05\n    ✓ play,ServerBound,0x06\n    ✓ play,ServerBound,0x07\n    ✓ play,ServerBound,0x08\n    ✓ play,ServerBound,0x09\n    ✓ play,ServerBound,0x0a\n    ✓ play,ServerBound,0x0b\n    ✓ play,ServerBound,0x0c\n    ✓ play,ServerBound,0x0d\n    ✓ play,ServerBound,0x0e\n    ✓ play,ServerBound,0x0f\n    ✓ play,ServerBound,0x10\n    ✓ play,ServerBound,0x11\n    ✓ play,ServerBound,0x12\n    ✓ play,ServerBound,0x13\n    ✓ play,ServerBound,0x14\n    ✓ play,ServerBound,0x15\n    ✓ play,ServerBound,0x16\n    ✓ play,ServerBound,0x17\n    ✓ play,ServerBound,0x18\n    ✓ play,ServerBound,0x19\n    ✓ play,ClientBound,0x00\n    ✓ play,ClientBound,0x01\n    ✓ play,ClientBound,0x02\n    ✓ play,ClientBound,0x03\n    ✓ play,ClientBound,0x04\n    ✓ play,ClientBound,0x05\n    ✓ play,ClientBound,0x06\n    ✓ play,ClientBound,0x07\n    ✓ play,ClientBound,0x08\n    ✓ play,ClientBound,0x09\n    ✓ play,ClientBound,0x0a\n    ✓ play,ClientBound,0x0b\n    ✓ play,ClientBound,0x0c\n    ✓ play,ClientBound,0x0d\n    ✓ play,ClientBound,0x0e\n    ✓ play,ClientBound,0x0f\n    ✓ play,ClientBound,0x10\n    ✓ play,ClientBound,0x11\n    ✓ play,ClientBound,0x12\n    ✓ play,ClientBound,0x13\n    ✓ play,ClientBound,0x14\n    ✓ play,ClientBound,0x15\n    ✓ play,ClientBound,0x16\n    ✓ play,ClientBound,0x17\n    ✓ play,ClientBound,0x18\n    ✓ play,ClientBound,0x19\n    ✓ play,ClientBound,0x1a\n    ✓ play,ClientBound,0x1b\n    ✓ play,ClientBound,0x1c\n    ✓ play,ClientBound,0x1d\n    ✓ play,ClientBound,0x1e\n    ✓ play,ClientBound,0x1f\n    ✓ play,ClientBound,0x20\n    ✓ play,ClientBound,0x21\n    ✓ play,ClientBound,0x22\n    ✓ play,ClientBound,0x23\n    ✓ play,ClientBound,0x24\n    ✓ play,ClientBound,0x25\n    ✓ play,ClientBound,0x26\n    ✓ play,ClientBound,0x27\n    ✓ play,ClientBound,0x28\n    ✓ play,ClientBound,0x29\n    ✓ play,ClientBound,0x2a\n    ✓ play,ClientBound,0x2b\n    ✓ play,ClientBound,0x2c\n    ✓ play,ClientBound,0x2d\n    ✓ play,ClientBound,0x2e\n    ✓ play,ClientBound,0x2f\n    ✓ play,ClientBound,0x30\n    ✓ play,ClientBound,0x31\n    ✓ play,ClientBound,0x32\n    ✓ play,ClientBound,0x33\n    ✓ play,ClientBound,0x34\n    ✓ play,ClientBound,0x35\n    ✓ play,ClientBound,0x36\n    ✓ play,ClientBound,0x37\n    ✓ play,ClientBound,0x38\n    ✓ play,ClientBound,0x39\n    ✓ play,ClientBound,0x3a\n    ✓ play,ClientBound,0x3b\n    ✓ play,ClientBound,0x3c\n    ✓ play,ClientBound,0x3d\n    ✓ play,ClientBound,0x3e\n    ✓ play,ClientBound,0x3f\n    ✓ play,ClientBound,0x40\n    ✓ play,ClientBound,0x41\n    ✓ play,ClientBound,0x42\n    ✓ play,ClientBound,0x43\n    ✓ play,ClientBound,0x44\n    ✓ play,ClientBound,0x45\n    ✓ play,ClientBound,0x46\n    ✓ play,ClientBound,0x47\n    ✓ play,ClientBound,0x48\n    ✓ play,ClientBound,0x49\n\n  client\n    ✓ pings the server (65754ms)\n    ✓ connects successfully - online mode (STUBBED)\n    ✓ connects successfully - offline mode (STUBBED)\n    ✓ gets kicked when no credentials supplied in online mode (67167ms)\n    ✓ does not crash for 10000ms (69597ms)\n\n  mc-server\n    ✓ starts listening and shuts down cleanly\n    ✓ kicks clients that do not log in (133ms)\n    ✓ kicks clients that do not send keepalive packets (122ms)\n    ✓ responds to ping requests\n    ✓ clients can log in and chat (39ms)\n    ✓ kicks clients when invalid credentials (8430ms)\n    ✓ gives correct reason for kicking clients when shutting down (42ms)\n\n\n  123 tests complete (4 minutes)\n```\n\n## Debugging\n\nYou can enable some protocol debugging output using `NODE_DEBUG` environment variable:\n\n```bash\nNODE_DEBUG=\"minecraft-protocol\" node [...]\n```\n\n## History\n\nSee [history](HISTORY.md)\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/andrewrk/node-minecraft-protocol/issues"
  },
  "homepage": "https://github.com/andrewrk/node-minecraft-protocol",
  "_id": "minecraft-protocol@0.14.1-GH",
  "_shasum": "8ba2c29010283bb3662f94e838a496096a9b1fde",
  "_from": "https://github.com/PrismarineJS/node-minecraft-protocol/tarball/master",
  "_resolved": "https://github.com/PrismarineJS/node-minecraft-protocol/tarball/master"
}
